{"noir_version":"1.0.0-beta.3+ceaa1986628197bd1170147f6a07f0f98d21030a","hash":17957681231462313902,"abi":{"parameters":[{"name":"ii","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"private"},{"name":"ipi","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"private"},{"name":"pis","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"private"},{"name":"cofins","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"private"},{"name":"icms","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"private"},{"name":"total_amount_paid","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"public"}],"return_type":null,"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"}}},"bytecode":"H4sIAAAAAAAA/72VQQ7CIBREpdDSxhhXLrwFFGhhpwsPYiPdeyrv4jk8iK1i8tNgN/1lEgKZIQO8DWTzVTWMfViTYdAwjzpNPBLxsohHIx6LeHnwoCg4e5RYJonZRUCXEo3Wvq29VPIqatdZI7TpGiutNNbcaquUt9q2rnOtcFIrL3vjVB/KCrx7Cci0SMA0Q+wqEJnylZjyBEwpYhdHZFquxLRMwJQhdpWITKuVmFYRptmE6dK754hMsTmw0JWD9//+KBpyEtnDwJqH+fA6H+/PxwVEH77/su1MtpvJRr0BCbDT7YwHAAA=","debug_symbols":"ldHLCoMwEAXQf5m1C+M7/kopEjVKICSSR6EE/71RFGwolezmzuXMZhyMtLdzx8QkNbQPB1wOxDApfHJQ7Su9ELElbYgy0BY1ToCK0U9NvSYwMU6hrdD6TKCOBc0NwHkAcCxA6X9RplkoULTI7gQORR4til+ixOgQVdZ8CR96xThnc3f9qV+/iGKk5/SIkxXDpTXv5WxOvyg50NEqul3aO3/+Aw==","file_map":{"61":{"source":"// Circuit to verify if the total amount paid in taxes equals the sum of individual tax components\n// Based on example: ii(9000) + ipi(3000) + pis(800) + cofins(3600) + icms(6500) = 22900\nfn main(\n    // Individual tax components (private)\n    ii: u64,\n    ipi: u64, \n    pis: u64,\n    cofins: u64,\n    icms: u64,\n    // Total amount paid (public for verification)\n    total_amount_paid: pub u64\n) {\n    // Calculate the sum of all tax components\n    let calculated_total: u64 = ii + ipi + pis + cofins + icms;\n\n    // Verify that the declared total matches the sum of components\n    assert(calculated_total == total_amount_paid);\n}\n\n#[test]\nfn test_main_example_data() {\n    // Test with example data from the JSON\n    let ii = 9000;\n    let ipi = 3000;\n    let pis = 800;\n    let cofins = 3600;\n    let icms = 6500;\n    let total_amount_paid = 22900; // Sum should equal 22900\n\n    main(ii, ipi, pis, cofins, icms, total_amount_paid);\n}\n\n#[test(should_fail)]\nfn test_main_incorrect_total() {\n    // Test with incorrect total (should fail)\n    let ii = 9000;\n    let ipi = 3000;\n    let pis = 800;\n    let cofins = 3600;\n    let icms = 6500;\n    let total_amount_paid = 20000; // Incorrect total - should be 22900\n\n    main(ii, ipi, pis, cofins, icms, total_amount_paid);\n}\n\n#[test]\nfn test_main_different_values() {\n    // Test with different tax values\n    let ii = 5000;\n    let ipi = 2000;\n    let pis = 500;\n    let cofins = 2000;\n    let icms = 4000;\n    let total_amount_paid = 13500; // Sum = 13500\n\n    main(ii, ipi, pis, cofins, icms, total_amount_paid);\n}","path":"/home/mikhael/projects/zkCargoPass/frontend/circuits/tax_validation/src/main.nr"}},"names":["main"],"brillig_names":[]}